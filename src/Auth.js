import { useState } from "react";
import { auth, googleProvider } from "../firebase";
import { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut } from "firebase/auth";

export default function Auth() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const handleSignUp = async () => {
    try {
      await createUserWithEmailAndPassword(auth, email, password);
      console.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞");
    } catch (error) {
      console.error(error.message);
    }
  };

  const handleSignIn = async () => {
    try {
      await signInWithEmailAndPassword(auth, email, password);
      console.log("–í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω");
    } catch (error) {
      console.error(error.message);
    }
  };

  const handleGoogleSignIn = async () => {
    try {
      await signInWithPopup(auth, googleProvider);
      console.log("–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Google —É—Å–ø–µ—à–µ–Ω");
    } catch (error) {
      console.error(error.message);
    }
  };

  const handleLogout = async () => {
    try {
      await signOut(auth);
      console.log("–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω");
    } catch (error) {
      console.error(error.message);
    }
  };

  return (
    <div>
      <h2>üîë –í—Ö–æ–¥ / –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</h2>
      <input type="email" placeholder="Email" onChange={(e) => setEmail(e.target.value)} />
      <input type="password" placeholder="–ü–∞—Ä–æ–ª—å" onChange={(e) => setPassword(e.target.value)} />
      <button onClick={handleSignUp}>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</button>
      <button onClick={handleSignIn}>–í–æ–π—Ç–∏</button>
      <button onClick={handleGoogleSignIn}>–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google</button>
      <button onClick={handleLogout}>–í—ã–π—Ç–∏</button>
    </div>
  );
}
